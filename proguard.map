com.viridiansoftware.es2pgsql.ApiVersion -> com.viridiansoftware.es2pgsql.ApiVersion:
    com.viridiansoftware.es2pgsql.ApiVersion V_2_4_3 -> V_2_4_3
    com.viridiansoftware.es2pgsql.ApiVersion V_5_5_2 -> V_5_5_2
    java.lang.String versionString -> a
    com.viridiansoftware.es2pgsql.ApiVersion[] $VALUES -> b
    6:6:com.viridiansoftware.es2pgsql.ApiVersion[] values() -> values
    6:6:com.viridiansoftware.es2pgsql.ApiVersion valueOf(java.lang.String) -> valueOf
    12:14:void <init>(java.lang.String,int,java.lang.String) -> <init>
    17:17:java.lang.String getVersionString() -> getVersionString
    6:8:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.Es2PgsqlApplication -> com.viridiansoftware.es2pgsql.Es2PgsqlApplication:
    20:20:void <init>() -> <init>
    23:24:void main(java.lang.String[]) -> main
    28:31:org.springframework.http.converter.json.MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter() -> mappingJackson2HttpMessageConverter
    36:36:java.util.concurrent.ScheduledExecutorService scheduledExecutorService() -> scheduledExecutorService
com.viridiansoftware.es2pgsql.HttpApiController -> com.viridiansoftware.es2pgsql.HttpApiController:
    org.slf4j.Logger LOGGER -> a
    com.viridiansoftware.es2pgsql.document.DocumentService documentService -> documentService
    com.viridiansoftware.es2pgsql.document.BulkService bulkService -> bulkService
    com.viridiansoftware.es2pgsql.document.IndexFieldMappingService indexFieldMappingService -> indexFieldMappingService
    com.viridiansoftware.es2pgsql.search.SearchService searchService -> searchService
    com.viridiansoftware.es2pgsql.node.NodesService nodesService -> nodesService
    com.viridiansoftware.es2pgsql.cluster.ClusterService clusterService -> clusterService
    41:41:void <init>() -> <init>
    59:59:java.lang.Object get() -> get
    64:76:java.lang.Object get(java.lang.String,org.springframework.http.HttpEntity) -> get
    81:92:java.lang.Object indexOrSearch(java.lang.String,org.springframework.http.HttpEntity) -> indexOrSearch
    97:98:java.lang.Object put(java.lang.String,org.springframework.http.HttpEntity) -> put
    103:136:java.lang.Object get(java.lang.String,java.lang.String) -> get
    142:155:java.lang.Object indexOrSearch(java.lang.String,java.lang.String,org.springframework.http.HttpEntity,javax.servlet.http.HttpServletResponse) -> indexOrSearch
    161:182:java.lang.Object get(java.lang.String,java.lang.String,java.lang.String) -> get
    188:204:java.lang.Object indexOrSearch(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.HttpEntity,javax.servlet.http.HttpServletResponse) -> indexOrSearch
    210:219:java.lang.Object index(java.lang.String,java.lang.String,java.lang.String,org.springframework.http.HttpEntity,javax.servlet.http.HttpServletResponse) -> index
    225:239:java.lang.Object get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.http.HttpEntity) -> get
    245:267:java.lang.Object indexOrSearch(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.http.HttpEntity,javax.servlet.http.HttpServletResponse) -> indexOrSearch
    273:288:java.lang.Object get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> get
    42:42:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.TaskSchedulerConfiguration -> com.viridiansoftware.es2pgsql.TaskSchedulerConfiguration:
    18:18:void <init>() -> <init>
    22:23:void configureTasks(org.springframework.scheduling.config.ScheduledTaskRegistrar) -> configureTasks
    27:27:org.springframework.scheduling.TaskScheduler taskScheduler() -> taskScheduler
com.viridiansoftware.es2pgsql.cat.CatService -> com.viridiansoftware.es2pgsql.cat.CatService:
    9:9:void <init>() -> <init>
com.viridiansoftware.es2pgsql.cluster.AckResponse -> com.viridiansoftware.es2pgsql.cluster.AckResponse:
    boolean acknowledged -> a
    6:7:void <init>() -> <init>
    10:10:boolean isAcknowledged() -> isAcknowledged
com.viridiansoftware.es2pgsql.cluster.ClusterService -> com.viridiansoftware.es2pgsql.cluster.ClusterService:
    org.slf4j.Logger LOGGER -> a
    org.springframework.core.env.Environment environment -> environment
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> jdbcTemplate
    com.viridiansoftware.es2pgsql.node.NodeSettingsService nodeSettingsService -> nodeSettingsService
    com.viridiansoftware.es2pgsql.node.VersionInfoService versionInfoService -> versionInfoService
    java.util.Map info -> b
    24:36:void <init>() -> <init>
    40:54:void postConstruct() -> postConstruct
    57:57:java.lang.String getNodeName() -> getNodeName
    61:61:java.lang.String getClusterName() -> getClusterName
    65:65:java.util.Map getNodeRootInfo() -> getNodeRootInfo
    69:85:java.util.Map getClusterHealth() -> getClusterHealth
    89:116:java.util.Map getClusterSettings() -> getClusterSettings
    120:135:java.lang.String getDatabaseVersion() -> getDatabaseVersion
    25:25:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.BulkApiResponse -> com.viridiansoftware.es2pgsql.document.BulkApiResponse:
    long took -> a
    boolean errors -> b
    java.util.List items -> c
    23:26:void <init>() -> <init>
    29:29:long getTook() -> getTook
    33:34:void setTook(long) -> setTook
    37:37:boolean isErrors() -> isErrors
    41:42:void setErrors(boolean) -> setErrors
    45:45:java.util.List getItems() -> getItems
com.viridiansoftware.es2pgsql.document.BulkIndexOperation -> com.viridiansoftware.es2pgsql.document.BulkIndexOperation:
    java.util.Queue POOL -> a
    java.lang.String index -> b
    java.lang.String type -> c
    java.lang.String id -> d
    java.lang.String source -> e
    9:9:void <init>() -> <init>
    18:22:com.viridiansoftware.es2pgsql.document.BulkIndexOperation allocate() -> allocate
    26:27:void release() -> release
    30:30:java.lang.String getIndex() -> getIndex
    34:35:void setIndex(java.lang.String) -> setIndex
    38:38:java.lang.String getType() -> getType
    42:43:void setType(java.lang.String) -> setType
    46:46:java.lang.String getId() -> getId
    50:51:void setId(java.lang.String) -> setId
    54:54:java.lang.String getSource() -> getSource
    58:59:void setSource(java.lang.String) -> setSource
    10:10:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.BulkService -> com.viridiansoftware.es2pgsql.document.BulkService:
    org.slf4j.Logger LOGGER -> a
    java.lang.String OPERATION_INDEX -> b
    java.lang.String NEW_LINE -> c
    int BULK_PARALLELISATION -> d
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> jdbcTemplate
    com.viridiansoftware.es2pgsql.util.TableUtils tableUtils -> tableUtils
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> scheduledExecutorService
    28:28:void <init>() -> <init>
    43:78:com.viridiansoftware.es2pgsql.document.BulkApiResponse bulkOperations(java.lang.String) -> bulkOperations
    83:103:void bulkIndex(com.viridiansoftware.es2pgsql.document.BulkApiResponse,java.lang.String,java.util.List) -> a
    29:33:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.BulkTask -> com.viridiansoftware.es2pgsql.document.BulkTask:
    org.slf4j.Logger LOGGER -> a
    java.lang.String DELIMITER -> b
    java.lang.String NEW_LINE -> c
    java.lang.String KEY_INDEX -> KEY_INDEX
    java.lang.String KEY_TYPE -> KEY_TYPE
    java.lang.String KEY_ID -> KEY_ID
    java.lang.String KEY_VERSION -> KEY_VERSION
    java.lang.String KEY_SHARDS -> KEY_SHARDS
    java.lang.String KEY_RESULT -> KEY_RESULT
    java.lang.String VALUE_RESULT_CREATED -> VALUE_RESULT_CREATED
    java.lang.String KEY_CREATED -> KEY_CREATED
    boolean VALUE_CREATED -> VALUE_CREATED
    java.lang.String KEY_STATUS -> KEY_STATUS
    int VALUE_STATUS_CREATED -> VALUE_STATUS_CREATED
    java.util.Map SHARDS -> d
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> e
    java.util.List indexOperations -> f
    java.lang.String index -> g
    int from -> h
    int size -> i
    57:63:void <init>(org.springframework.jdbc.core.JdbcTemplate,java.util.List,java.lang.String,int,int) -> <init>
    67:111:java.util.List call() -> call
    115:126:java.util.Map createEntry(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createEntry
    23:23:java.lang.Object call() -> call
    24:42:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.BulkTask$1 -> com.viridiansoftware.es2pgsql.document.BulkTask$1:
    42:47:void <init>() -> <init>
com.viridiansoftware.es2pgsql.document.DocumentService -> com.viridiansoftware.es2pgsql.document.DocumentService:
    org.slf4j.Logger LOGGER -> a
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> jdbcTemplate
    com.viridiansoftware.es2pgsql.util.TableUtils tableUtils -> tableUtils
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> b
    38:46:void <init>() -> <init>
    49:68:java.util.Map get(java.lang.String,java.lang.String,java.lang.String) -> get
    72:127:com.viridiansoftware.es2pgsql.document.MultiGetResponse multiGetByRequestBody(java.lang.String) -> multiGetByRequestBody
    131:151:com.viridiansoftware.es2pgsql.document.MultiGetResponse multiGet() -> multiGet
    155:178:com.viridiansoftware.es2pgsql.document.MultiGetResponse multiGet(java.lang.String) -> multiGet
    182:200:com.viridiansoftware.es2pgsql.document.MultiGetResponse multiGet(java.lang.String,java.lang.String) -> multiGet
    205:256:com.viridiansoftware.es2pgsql.document.IndexApiResponse index(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.viridiansoftware.es2pgsql.document.IndexOpType) -> index
    39:39:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.DocumentService$1 -> com.viridiansoftware.es2pgsql.document.DocumentService$1:
    int[] $SwitchMap$com$viridiansoftware$es2pgsql$document$IndexOpType -> a
    217:217:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.GetResponse -> com.viridiansoftware.es2pgsql.document.GetResponse:
    java.lang.String _index -> a
    java.lang.String _type -> b
    java.lang.String _id -> c
    int _version -> d
    boolean found -> e
    java.util.Map _source -> f
    8:13:void <init>() -> <init>
    17:17:java.lang.String get_index() -> get_index
    21:22:void set_index(java.lang.String) -> set_index
    25:25:java.lang.String get_type() -> get_type
    29:30:void set_type(java.lang.String) -> set_type
    33:33:java.lang.String get_id() -> get_id
    37:38:void set_id(java.lang.String) -> set_id
    41:41:int get_version() -> get_version
    45:46:void set_version(int) -> set_version
    49:49:java.util.Map get_source() -> get_source
    53:54:void set_source(java.util.Map) -> set_source
    57:57:boolean isFound() -> isFound
    61:62:void setFound(boolean) -> setFound
com.viridiansoftware.es2pgsql.document.IndexApiResponse -> com.viridiansoftware.es2pgsql.document.IndexApiResponse:
    java.lang.String _index -> _index
    java.lang.String _type -> _type
    java.lang.String _id -> _id
    int _version -> _version
    boolean created -> created
    18:18:void <init>() -> <init>
com.viridiansoftware.es2pgsql.document.IndexFieldMappingService -> com.viridiansoftware.es2pgsql.document.IndexFieldMappingService:
    org.slf4j.Logger LOGGER -> a
    com.viridiansoftware.es2pgsql.util.FormatDateTimeFormatter DEFAULT_DATE_TIME_FORMATTER -> b
    java.util.Map EMPTY_MAPPING -> c
    java.util.SortedSet mappingQueue -> d
    com.viridiansoftware.es2pgsql.node.NodeSettingsService nodeSettingsService -> nodeSettingsService
    com.viridiansoftware.es2pgsql.node.VersionInfoService versionInfoService -> versionInfoService
    org.springframework.scheduling.TaskScheduler taskScheduler -> taskScheduler
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> jdbcTemplate
    com.viridiansoftware.es2pgsql.util.TableUtils tableUtils -> tableUtils
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> e
    38:57:void <init>() -> <init>
    61:88:void postConstruct() -> postConstruct
    91:91:java.util.List getTypesForTableName(java.lang.String) -> getTypesForTableName
    95:112:java.util.List getTypesForTableName(java.lang.String,java.lang.String) -> getTypesForTableName
    116:120:java.util.Map getIndexMappings() -> getIndexMappings
    124:129:java.util.Map getIndexMapping(java.lang.String) -> getIndexMapping
    133:137:java.util.Map getIndexMappingsForPattern(java.lang.String) -> a
    141:146:java.util.Map getIndexMapping(java.lang.String,java.lang.String) -> getIndexMapping
    150:154:void putIndexMapping(java.lang.String,java.lang.String) -> putIndexMapping
    157:158:void putIndexMapping(java.lang.String,java.lang.String,java.lang.String) -> putIndexMapping
    161:174:void putIndexMapping(java.lang.String,java.lang.String,java.util.Map) -> a
    177:203:java.util.Map getIndexMapping(java.lang.String,java.lang.String,java.lang.String) -> getIndexMapping
    207:222:java.lang.String getFirstFieldMapping(java.util.List,java.lang.String[],java.lang.String) -> getFirstFieldMapping
    226:234:java.lang.String getFirstFieldMapping(java.lang.String,java.lang.String,java.lang.String) -> getFirstFieldMapping
    238:253:java.util.Map getFieldCapabilities(java.lang.String) -> getFieldCapabilities
    257:267:java.util.Map getIndexMappingsFromTable(java.lang.String) -> b
    272:280:java.util.Map getIndexTypeMappingFromTable(java.lang.String,java.lang.String) -> a
    285:287:void run() -> run
    291:330:void generateMappingsForQueuedTables() -> a
    333:355:int generateMappingsForAllTypes(java.util.Map,java.lang.String,org.springframework.jdbc.support.rowset.SqlRowSet) -> a
    359:371:int generateMappingsForType(java.util.Map,java.lang.String,java.lang.String,org.springframework.jdbc.support.rowset.SqlRowSet) -> a
    375:377:void generateFieldCapabilitiesForIndex(java.lang.String) -> c
    380:402:void generateFieldCapabilitiesForIndex(java.lang.String,org.springframework.jdbc.support.rowset.SqlRowSet) -> a
    405:411:java.util.Map generateFieldCapability(java.lang.String) -> d
    416:429:void checkTablesForNewInserts() -> b
    432:481:void generateMappings(java.util.Map,java.util.Map) -> a
    484:486:java.util.Map generateMappingType(java.lang.String) -> e
    490:498:void saveMappings(java.lang.String,java.lang.String,java.util.Map) -> b
    39:42:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.IndexOpType -> com.viridiansoftware.es2pgsql.document.IndexOpType:
    com.viridiansoftware.es2pgsql.document.IndexOpType CREATE -> CREATE
    com.viridiansoftware.es2pgsql.document.IndexOpType UPDATE -> UPDATE
    com.viridiansoftware.es2pgsql.document.IndexOpType OVERWRITE -> OVERWRITE
    com.viridiansoftware.es2pgsql.document.IndexOpType[] $VALUES -> a
    6:6:com.viridiansoftware.es2pgsql.document.IndexOpType[] values() -> values
    6:6:com.viridiansoftware.es2pgsql.document.IndexOpType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:9:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.document.MultiGetResponse -> com.viridiansoftware.es2pgsql.document.MultiGetResponse:
    java.util.List docs -> a
    9:10:void <init>() -> <init>
    13:13:java.util.List getDocs() -> getDocs
com.viridiansoftware.es2pgsql.exception.DocumentAlreadyExistsException -> com.viridiansoftware.es2pgsql.exception.DocumentAlreadyExistsException:
    long serialVersionUID -> serialVersionUID
    10:10:void <init>() -> <init>
com.viridiansoftware.es2pgsql.exception.NoSuchDocumentException -> com.viridiansoftware.es2pgsql.exception.NoSuchDocumentException:
    long serialVersionUID -> serialVersionUID
    10:10:void <init>() -> <init>
com.viridiansoftware.es2pgsql.exception.NoSuchMappingException -> com.viridiansoftware.es2pgsql.exception.NoSuchMappingException:
    long serialVersionUID -> serialVersionUID
    14:15:void <init>(java.lang.String) -> <init>
com.viridiansoftware.es2pgsql.exception.UnsupportedAggregationTypeException -> com.viridiansoftware.es2pgsql.exception.UnsupportedAggregationTypeException:
    long serialVersionUID -> serialVersionUID
    14:15:void <init>() -> <init>
    18:19:void <init>(java.lang.String) -> <init>
com.viridiansoftware.es2pgsql.exception.UnsupportedQueryTypeException -> com.viridiansoftware.es2pgsql.exception.UnsupportedQueryTypeException:
    long serialVersionUID -> serialVersionUID
    22:22:void <init>() -> <init>
com.viridiansoftware.es2pgsql.node.JvmStats -> com.viridiansoftware.es2pgsql.node.JvmStats:
    java.util.concurrent.locks.ReadWriteLock lock -> a
    java.util.Map currentStats -> b
    11:14:void <init>() -> <init>
    18:26:void run() -> run
    void generateCurrentStats(java.util.Map) -> generateCurrentStats
    31:34:java.util.Map getCurrentStats() -> getCurrentStats
com.viridiansoftware.es2pgsql.node.NodeInfoService -> com.viridiansoftware.es2pgsql.node.NodeInfoService:
    org.slf4j.Logger LOGGER -> a
    java.lang.String KEY_OS -> KEY_OS
    java.lang.String KEY_PROCESS -> KEY_PROCESS
    java.lang.String KEY_JVM -> KEY_JVM
    java.lang.String[] ALL_INFO -> ALL_INFO
    org.springframework.core.env.Environment environment -> environment
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> scheduledExecutorService
    com.viridiansoftware.es2pgsql.node.NodeSettingsService nodeSettingsService -> nodeSettingsService
    com.viridiansoftware.es2pgsql.node.VersionInfoService versionInfoService -> versionInfoService
    java.util.Map nodeAttributes -> nodeAttributes
    java.util.Map httpAttributes -> httpAttributes
    java.util.Map transportAttributes -> transportAttributes
    com.viridiansoftware.es2pgsql.node.OsStats osStats -> osStats
    com.viridiansoftware.es2pgsql.node.JvmStats jvmStats -> jvmStats
    com.viridiansoftware.es2pgsql.node.ProcessStats processStats -> processStats
    boolean dataNode -> dataNode
    28:48:void <init>() -> <init>
    58:87:void postConstruct() -> postConstruct
    90:132:java.util.Map getNodeInfo(java.lang.String[]) -> getNodeInfo
    136:136:java.util.Map getNodeInfo() -> getNodeInfo
    140:140:java.lang.String getNodeId() -> getNodeId
    144:144:java.lang.String getNodeName() -> getNodeName
    148:158:boolean checkIfDataNode() -> checkIfDataNode
    162:163:void setEnvironment(org.springframework.core.env.Environment) -> setEnvironment
    166:167:void setNodeSettingsService(com.viridiansoftware.es2pgsql.node.NodeSettingsService) -> setNodeSettingsService
    170:171:void setVersionInfoService(com.viridiansoftware.es2pgsql.node.VersionInfoService) -> setVersionInfoService
    29:35:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.node.NodeInfoService$1 -> com.viridiansoftware.es2pgsql.node.NodeInfoService$1:
    int[] $SwitchMap$com$viridiansoftware$es2pgsql$ApiVersion -> a
    70:70:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.node.NodeSettingsService -> com.viridiansoftware.es2pgsql.node.NodeSettingsService:
    org.springframework.core.env.Environment environment -> environment
    java.lang.String nodeId -> a
    java.lang.String nodeName -> b
    java.lang.String clusterId -> c
    java.lang.String clusterName -> d
    java.lang.String hostIp -> e
    int port -> f
    java.lang.String ip -> g
    java.lang.String transportAddress -> h
    java.lang.String httpAddress -> i
    boolean usingCitus -> j
    long mappingInterval -> k
    double mappingSampleSize -> l
    long garbageCollectionInterval -> m
    18:33:void <init>() -> <init>
    41:58:void postConstruct() -> postConstruct
    61:61:org.springframework.core.env.Environment getEnvironment() -> getEnvironment
    65:65:java.lang.String getNodeId() -> getNodeId
    69:69:java.lang.String getNodeName() -> getNodeName
    73:73:java.lang.String getClusterId() -> getClusterId
    77:77:java.lang.String getClusterName() -> getClusterName
    81:81:java.lang.String getHostIp() -> getHostIp
    85:85:int getPort() -> getPort
    89:89:java.lang.String getIp() -> getIp
    93:93:java.lang.String getTransportAddress() -> getTransportAddress
    97:97:java.lang.String getHttpAddress() -> getHttpAddress
    101:101:boolean isUsingCitus() -> isUsingCitus
    105:105:long getMappingInterval() -> getMappingInterval
    109:109:double getMappingSampleSize() -> getMappingSampleSize
    113:113:long getGarbageCollectionInterval() -> getGarbageCollectionInterval
com.viridiansoftware.es2pgsql.node.NodesService -> com.viridiansoftware.es2pgsql.node.NodesService:
    org.springframework.core.env.Environment environment -> environment
    com.viridiansoftware.es2pgsql.node.NodeInfoService nodeInfoService -> nodeInfoService
    java.lang.String clusterName -> a
    17:17:void <init>() -> <init>
    27:28:void postConstruct() -> postConstruct
    32:39:java.util.Map getNodesInfo() -> getNodesInfo
    44:51:java.util.Map getLocalNodeInfo() -> getLocalNodeInfo
    56:63:java.util.Map getNodesInfo(java.lang.String[]) -> getNodesInfo
com.viridiansoftware.es2pgsql.node.OsStats -> com.viridiansoftware.es2pgsql.node.OsStats:
    java.lang.management.OperatingSystemMXBean MX_BEAN -> a
    java.lang.reflect.Method FREE_PHYSICAL_MEMORY_SIZE -> b
    java.lang.reflect.Method TOTAL_PHYSICAL_MEMORY_SIZE -> c
    java.lang.reflect.Method FREE_SWAP_SPACE_SIZE -> d
    java.lang.reflect.Method TOTAL_SWAP_SPACE_SIZE -> e
    java.lang.reflect.Method SYSTEM_LOAD_AVERAGE -> f
    java.lang.reflect.Method SYSTEM_CPU_LOAD -> g
    java.util.concurrent.locks.ReadWriteLock lock -> h
    java.util.Map currentStats -> i
    16:45:void <init>() -> <init>
    37:40:java.lang.reflect.Method getMxImplMethod(java.lang.String) -> a
    49:57:void run() -> run
    void generateCurrentStats(java.util.Map) -> generateCurrentStats
    62:65:java.util.Map getCurrentStats() -> getCurrentStats
    69:75:long getFreePhysicalMemorySize() -> getFreePhysicalMemorySize
    80:86:long getTotalPhysicalMemorySize() -> getTotalPhysicalMemorySize
    91:97:long getFreeSwapSpaceSize() -> getFreeSwapSpaceSize
    102:108:long getTotalSwapSpaceSize() -> getTotalSwapSpaceSize
    113:123:double[] getSystemLoadAverage() -> getSystemLoadAverage
    127:137:int getSystemCpuLoad() -> getSystemCpuLoad
    17:33:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.node.ProcessStats -> com.viridiansoftware.es2pgsql.node.ProcessStats:
    java.util.concurrent.locks.ReadWriteLock lock -> a
    java.util.Map currentStats -> b
    11:14:void <init>() -> <init>
    18:26:void run() -> run
    void generateCurrentStats(java.util.Map) -> generateCurrentStats
    31:34:java.util.Map getCurrentStats() -> getCurrentStats
com.viridiansoftware.es2pgsql.node.VersionInfoService -> com.viridiansoftware.es2pgsql.node.VersionInfoService:
    org.slf4j.Logger LOGGER -> a
    java.lang.String FALLBACK_TIMESTAMP -> b
    org.springframework.core.env.Environment environment -> environment
    com.viridiansoftware.es2pgsql.ApiVersion apiVersion -> c
    java.lang.String versionNumber -> d
    java.lang.String buildHash -> e
    java.lang.String buildTimestamp -> f
    24:32:void <init>() -> <init>
    39:65:void postConstruct() -> postConstruct
    68:68:com.viridiansoftware.es2pgsql.ApiVersion getApiVersion() -> getApiVersion
    72:72:java.lang.String getVersionNumber() -> getVersionNumber
    76:77:void setVersionNumber(java.lang.String) -> setVersionNumber
    80:80:java.lang.String getBuildHash() -> getBuildHash
    84:85:void setBuildHash(java.lang.String) -> setBuildHash
    88:88:java.lang.String getBuildTimestamp() -> getBuildTimestamp
    92:93:void setBuildTimestamp(java.lang.String) -> setBuildTimestamp
    25:27:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.node.v2.V2JvmStats -> com.viridiansoftware.es2pgsql.node.v2.V2JvmStats:
    10:10:void <init>() -> <init>
    16:16:void generateCurrentStats(java.util.Map) -> generateCurrentStats
com.viridiansoftware.es2pgsql.node.v2.V2OsStats -> com.viridiansoftware.es2pgsql.node.v2.V2OsStats:
    18:18:void <init>() -> <init>
    24:24:void generateCurrentStats(java.util.Map) -> generateCurrentStats
com.viridiansoftware.es2pgsql.node.v2.V2ProcessStats -> com.viridiansoftware.es2pgsql.node.v2.V2ProcessStats:
    10:10:void <init>() -> <init>
    16:16:void generateCurrentStats(java.util.Map) -> generateCurrentStats
com.viridiansoftware.es2pgsql.node.v5.V5JvmStats -> com.viridiansoftware.es2pgsql.node.v5.V5JvmStats:
    10:10:void <init>() -> <init>
    16:16:void generateCurrentStats(java.util.Map) -> generateCurrentStats
com.viridiansoftware.es2pgsql.node.v5.V5OsStats -> com.viridiansoftware.es2pgsql.node.v5.V5OsStats:
    10:10:void <init>() -> <init>
    16:16:void generateCurrentStats(java.util.Map) -> generateCurrentStats
com.viridiansoftware.es2pgsql.node.v5.V5ProcessStats -> com.viridiansoftware.es2pgsql.node.v5.V5ProcessStats:
    10:10:void <init>() -> <init>
    16:16:void generateCurrentStats(java.util.Map) -> generateCurrentStats
com.viridiansoftware.es2pgsql.search.RequestBodySearch -> com.viridiansoftware.es2pgsql.search.RequestBodySearch:
    java.lang.String originalQuery -> originalQuery
    long timestamp -> timestamp
    com.viridiansoftware.es2pgsql.search.query.Query query -> query
    com.viridiansoftware.es2pgsql.search.agg.RootAggregationContext aggregations -> aggregations
    java.lang.String querySqlWhereClause -> querySqlWhereClause
    int from -> from
    int size -> size
    35:36:void <init>(java.lang.String) -> <init>
    28:47:void <init>(java.lang.String,boolean) -> <init>
    50:53:boolean hasAggregations() -> hasAggregations
    57:57:java.lang.String getOriginalQuery() -> getOriginalQuery
    61:61:java.lang.String getQuerySqlWhereClause() -> getQuerySqlWhereClause
    65:65:com.viridiansoftware.es2pgsql.search.query.Query getQuery() -> getQuery
    69:69:com.viridiansoftware.es2pgsql.search.agg.RootAggregationContext getAggregations() -> getAggregations
    73:73:int getFrom() -> getFrom
    77:77:int getSize() -> getSize
    82:86:int hashCode() -> hashCode
    91:105:boolean equals(java.lang.Object) -> equals
com.viridiansoftware.es2pgsql.search.SearchService -> com.viridiansoftware.es2pgsql.search.SearchService:
    org.slf4j.Logger LOGGER -> a
    java.lang.String SEARCH_TABLE_PREFIX -> b
    java.lang.String[] EMPTY_TYPES_LIST -> c
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> jdbcTemplate
    com.viridiansoftware.es2pgsql.document.IndexFieldMappingService indexFieldMappingService -> indexFieldMappingService
    com.viridiansoftware.es2pgsql.util.TableUtils tableUtils -> tableUtils
    com.viridiansoftware.es2pgsql.util.TableGarbageCollector garbageCollector -> garbageCollector
    com.fasterxml.jackson.databind.ObjectMapper objectMapper -> d
    37:52:void <init>() -> <init>
    56:85:java.util.Map multiSearch(java.lang.String,java.lang.String,org.springframework.http.HttpEntity) -> multiSearch
    89:89:java.util.Map search(org.springframework.http.HttpEntity) -> search
    93:93:java.util.Map search(java.lang.String,org.springframework.http.HttpEntity) -> search
    98:101:java.util.Map search(java.lang.String,java.lang.String,org.springframework.http.HttpEntity) -> search
    106:111:java.util.Map search(java.util.List,java.lang.String[],org.springframework.http.HttpEntity) -> a
    116:124:java.util.Map searchWithAggregation(java.util.List,java.lang.String[],com.viridiansoftware.es2pgsql.search.RequestBodySearch,long) -> a
    129:160:java.util.Map searchWithAggregationUsingOriginalTable(java.util.List,java.lang.String[],com.viridiansoftware.es2pgsql.search.RequestBodySearch,long) -> b
    165:227:java.util.Map searchWithAggregationUsingFilteredTables(java.util.List,java.lang.String[],com.viridiansoftware.es2pgsql.search.RequestBodySearch,long) -> c
    232:275:java.util.Map searchWithoutAggregation(java.util.List,java.lang.String[],com.viridiansoftware.es2pgsql.search.RequestBodySearch,long) -> d
    279:287:java.util.Map executeQuery(java.lang.String,long,int) -> a
    293:341:java.util.Map convertSqlQueryResultToSearchResult(org.springframework.jdbc.support.rowset.SqlRowSet,long,int) -> a
    38:41:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.search.agg.Aggregation -> com.viridiansoftware.es2pgsql.search.agg.Aggregation:
    java.lang.String AGGREGATION_TABLE_PREFIX -> AGGREGATION_TABLE_PREFIX
    java.util.List EMPTY_AGGREGATION_LIST -> EMPTY_AGGREGATION_LIST
    16:16:void <init>() -> <init>
    void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    24:27:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec,java.util.Map,java.lang.String) -> executeSqlQuery
    32:34:void executeSqlQuery(java.util.List,java.lang.String[],org.springframework.jdbc.core.JdbcTemplate,com.viridiansoftware.es2pgsql.document.IndexFieldMappingService,java.util.Map,java.util.List,java.lang.String,com.viridiansoftware.es2pgsql.search.RequestBodySearch) -> executeSqlQuery
    java.lang.String getAggregationName() -> getAggregationName
    java.util.List getSubAggregations() -> getSubAggregations
    18:19:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.search.agg.AggregationExec -> com.viridiansoftware.es2pgsql.search.agg.AggregationExec:
    java.util.List indices -> a
    java.lang.String[] types -> b
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> c
    com.viridiansoftware.es2pgsql.document.IndexFieldMappingService indexFieldMappingService -> d
    java.util.Map aggregationsResult -> e
    java.util.List tempTablesCreated -> f
    java.lang.String queryTable -> g
    com.viridiansoftware.es2pgsql.search.RequestBodySearch requestBodySearch -> h
    com.viridiansoftware.es2pgsql.search.agg.Aggregation aggregation -> i
    28:38:void <init>(java.util.List,java.lang.String[],org.springframework.jdbc.core.JdbcTemplate,com.viridiansoftware.es2pgsql.document.IndexFieldMappingService,java.util.Map,java.util.List,java.lang.String,com.viridiansoftware.es2pgsql.search.RequestBodySearch,com.viridiansoftware.es2pgsql.search.agg.Aggregation) -> <init>
    41:41:java.util.List getIndices() -> getIndices
    45:45:java.lang.String[] getTypes() -> getTypes
    49:49:org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate() -> getJdbcTemplate
    53:53:com.viridiansoftware.es2pgsql.document.IndexFieldMappingService getIndexFieldMappingService() -> getIndexFieldMappingService
    57:57:java.util.Map getAggregationsResult() -> getAggregationsResult
    61:61:java.util.List getTempTablesCreated() -> getTempTablesCreated
    65:65:java.lang.String getQueryTable() -> getQueryTable
    69:69:com.viridiansoftware.es2pgsql.search.RequestBodySearch getRequestBodySearch() -> getRequestBodySearch
    73:73:com.viridiansoftware.es2pgsql.search.agg.Aggregation getAggregation() -> getAggregation
com.viridiansoftware.es2pgsql.search.agg.AggregationType -> com.viridiansoftware.es2pgsql.search.agg.AggregationType:
    com.viridiansoftware.es2pgsql.search.agg.AggregationType AVG -> AVG
    com.viridiansoftware.es2pgsql.search.agg.AggregationType CARDINALITY -> CARDINALITY
    com.viridiansoftware.es2pgsql.search.agg.AggregationType EXTENDED_STATS -> EXTENDED_STATS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType GEO_BOUNDS -> GEO_BOUNDS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType GEO_CENTROID -> GEO_CENTROID
    com.viridiansoftware.es2pgsql.search.agg.AggregationType MAX -> MAX
    com.viridiansoftware.es2pgsql.search.agg.AggregationType MIN -> MIN
    com.viridiansoftware.es2pgsql.search.agg.AggregationType PERCENTILES -> PERCENTILES
    com.viridiansoftware.es2pgsql.search.agg.AggregationType PERCENTILE_RANKS -> PERCENTILE_RANKS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType SCRIPTED_METRIC -> SCRIPTED_METRIC
    com.viridiansoftware.es2pgsql.search.agg.AggregationType STATS -> STATS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType SUM -> SUM
    com.viridiansoftware.es2pgsql.search.agg.AggregationType TOP_HITS -> TOP_HITS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType VALUE_COUNT -> VALUE_COUNT
    com.viridiansoftware.es2pgsql.search.agg.AggregationType ADJACENCY_MATRIX -> ADJACENCY_MATRIX
    com.viridiansoftware.es2pgsql.search.agg.AggregationType CHILDREN -> CHILDREN
    com.viridiansoftware.es2pgsql.search.agg.AggregationType DATE_HISTOGRAM -> DATE_HISTOGRAM
    com.viridiansoftware.es2pgsql.search.agg.AggregationType DATE_RANGE -> DATE_RANGE
    com.viridiansoftware.es2pgsql.search.agg.AggregationType DIVERSIFIED_SAMPLER -> DIVERSIFIED_SAMPLER
    com.viridiansoftware.es2pgsql.search.agg.AggregationType FILTER -> FILTER
    com.viridiansoftware.es2pgsql.search.agg.AggregationType FILTERS -> FILTERS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType GEO_DISTANCE -> GEO_DISTANCE
    com.viridiansoftware.es2pgsql.search.agg.AggregationType GEOHASH_GRID -> GEOHASH_GRID
    com.viridiansoftware.es2pgsql.search.agg.AggregationType GLOBAL -> GLOBAL
    com.viridiansoftware.es2pgsql.search.agg.AggregationType HISTOGRAM -> HISTOGRAM
    com.viridiansoftware.es2pgsql.search.agg.AggregationType IP_RANGE -> IP_RANGE
    com.viridiansoftware.es2pgsql.search.agg.AggregationType MISSING -> MISSING
    com.viridiansoftware.es2pgsql.search.agg.AggregationType NESTED -> NESTED
    com.viridiansoftware.es2pgsql.search.agg.AggregationType RANGE -> RANGE
    com.viridiansoftware.es2pgsql.search.agg.AggregationType REVERSE_NESTED -> REVERSE_NESTED
    com.viridiansoftware.es2pgsql.search.agg.AggregationType SAMPLER -> SAMPLER
    com.viridiansoftware.es2pgsql.search.agg.AggregationType SIGNIFICANT_TERMS -> SIGNIFICANT_TERMS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType TERMS -> TERMS
    com.viridiansoftware.es2pgsql.search.agg.AggregationType[] $VALUES -> a
    8:8:com.viridiansoftware.es2pgsql.search.agg.AggregationType[] values() -> values
    8:8:com.viridiansoftware.es2pgsql.search.agg.AggregationType valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    48:50:com.viridiansoftware.es2pgsql.search.agg.AggregationType parse(java.lang.String) -> parse
    8:44:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.search.agg.AggregationsParser -> com.viridiansoftware.es2pgsql.search.agg.AggregationsParser:
    java.lang.String FIELD_AGGS -> FIELD_AGGS
    java.lang.String FIELD_AGGREGATIONS -> FIELD_AGGREGATIONS
    java.lang.String AGGREGATION_AVG -> a
    java.lang.String AGGREGATION_MIN -> b
    java.lang.String AGGREGATION_MAX -> c
    java.lang.String AGGREGATION_SUM -> d
    java.lang.String AGGREGATION_RANGE -> e
    14:14:void <init>() -> <init>
    25:31:java.util.List parseAggregations(java.lang.String) -> parseAggregations
    35:49:java.util.List parseAggregations(com.jsoniter.any.Any) -> parseAggregations
    53:68:com.viridiansoftware.es2pgsql.search.agg.Aggregation parseAggregation(java.lang.String,com.jsoniter.any.Any) -> parseAggregation
com.viridiansoftware.es2pgsql.search.agg.AvgAggregation -> com.viridiansoftware.es2pgsql.search.agg.AvgAggregation:
    java.lang.String KEY_FIELD -> a
    java.lang.String aggregationName -> b
    java.lang.String fieldName -> c
    19:22:void <init>(java.lang.String,com.jsoniter.any.Any) -> <init>
    26:35:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    39:39:java.lang.String getAggregationName() -> getAggregationName
    44:44:java.util.List getSubAggregations() -> getSubAggregations
com.viridiansoftware.es2pgsql.search.agg.BucketAggregation -> com.viridiansoftware.es2pgsql.search.agg.BucketAggregation:
    java.util.List subaggregations -> subaggregations
    9:10:void <init>() -> <init>
    14:14:java.util.List getSubAggregations() -> getSubAggregations
com.viridiansoftware.es2pgsql.search.agg.MaxAggregation -> com.viridiansoftware.es2pgsql.search.agg.MaxAggregation:
    java.lang.String KEY_FIELD -> a
    java.lang.String aggregationName -> b
    java.lang.String fieldName -> c
    19:22:void <init>(java.lang.String,com.jsoniter.any.Any) -> <init>
    26:35:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    39:39:java.lang.String getAggregationName() -> getAggregationName
    44:44:java.util.List getSubAggregations() -> getSubAggregations
com.viridiansoftware.es2pgsql.search.agg.MinAggregation -> com.viridiansoftware.es2pgsql.search.agg.MinAggregation:
    java.lang.String KEY_FIELD -> a
    java.lang.String aggregationName -> b
    java.lang.String fieldName -> c
    23:26:void <init>(java.lang.String,com.jsoniter.any.Any) -> <init>
    30:39:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    43:43:java.lang.String getAggregationName() -> getAggregationName
    48:48:java.util.List getSubAggregations() -> getSubAggregations
com.viridiansoftware.es2pgsql.search.agg.RangeAggregation -> com.viridiansoftware.es2pgsql.search.agg.RangeAggregation:
    org.slf4j.Logger LOGGER -> a
    java.lang.String KEY_FIELD -> b
    java.lang.String KEY_RANGES -> c
    java.lang.String KEY_FROM -> d
    java.lang.String KEY_TO -> e
    java.lang.String aggregationName -> f
    java.lang.String fieldName -> g
    java.util.Set ranges -> h
    boolean keyed -> i
    30:62:void <init>(java.lang.String,com.jsoniter.any.Any) -> <init>
    66:146:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    150:150:java.lang.String getAggregationName() -> getAggregationName
    20:20:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.search.agg.RangeAggregation$1 -> com.viridiansoftware.es2pgsql.search.agg.RangeAggregation$1:
com.viridiansoftware.es2pgsql.search.agg.RangeAggregation$Range -> com.viridiansoftware.es2pgsql.search.agg.RangeAggregation$a:
    java.lang.Double doubleTo -> a
    java.lang.Double doubleFrom -> b
    java.lang.Long longTo -> c
    java.lang.Long longFrom -> d
    com.viridiansoftware.es2pgsql.search.agg.RangeAggregation this$0 -> e
    153:153:void <init>(com.viridiansoftware.es2pgsql.search.agg.RangeAggregation) -> <init>
    161:178:java.lang.String toString() -> toString
    183:189:int hashCode() -> hashCode
    194:221:boolean equals(java.lang.Object) -> equals
    153:153:void <init>(com.viridiansoftware.es2pgsql.search.agg.RangeAggregation,com.viridiansoftware.es2pgsql.search.agg.RangeAggregation$1) -> <init>
com.viridiansoftware.es2pgsql.search.agg.RootAggregationContext -> com.viridiansoftware.es2pgsql.search.agg.RootAggregationContext:
    java.util.List subAggregations -> a
    14:14:void <init>() -> <init>
    19:22:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    26:29:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec,java.util.Map,java.lang.String) -> executeSqlQuery
    35:39:void executeSqlQuery(java.util.List,java.lang.String[],org.springframework.jdbc.core.JdbcTemplate,com.viridiansoftware.es2pgsql.document.IndexFieldMappingService,java.util.Map,java.util.List,java.lang.String,com.viridiansoftware.es2pgsql.search.RequestBodySearch) -> executeSqlQuery
    43:43:java.lang.String getAggregationName() -> getAggregationName
    48:48:java.util.List getSubAggregations() -> getSubAggregations
    52:53:void setSubAggregations(java.util.List) -> setSubAggregations
com.viridiansoftware.es2pgsql.search.agg.SumAggregation -> com.viridiansoftware.es2pgsql.search.agg.SumAggregation:
    java.lang.String KEY_FIELD -> a
    java.lang.String aggregationName -> b
    java.lang.String fieldName -> c
    23:26:void <init>(java.lang.String,com.jsoniter.any.Any) -> <init>
    30:39:void executeSqlQuery(com.viridiansoftware.es2pgsql.search.agg.AggregationExec) -> executeSqlQuery
    43:43:java.lang.String getAggregationName() -> getAggregationName
    48:48:java.util.List getSubAggregations() -> getSubAggregations
com.viridiansoftware.es2pgsql.search.query.BoolQuery -> com.viridiansoftware.es2pgsql.search.query.BoolQuery:
    java.lang.String KEY_MUST -> a
    java.lang.String KEY_MUST_NOT -> b
    java.lang.String KEY_FILTER -> c
    java.lang.String KEY_SHOULD -> d
    java.lang.String KEY_DISABLE_COORD -> e
    java.lang.String KEY_ADJUST_PURE_NEGATIVE -> f
    java.lang.String KEY_MINIMUM_SHOULD_MATCH -> g
    java.lang.String KEY_BOOST -> h
    java.util.List mustClauses -> i
    java.util.List mustNotClauses -> j
    java.util.List filterClauses -> k
    java.util.List shouldClauses -> l
    java.lang.String minimumShouldMatch -> m
    double boost -> n
    boolean disabledCoord -> o
    boolean adjustPureNegative -> p
    22:62:void <init>(com.jsoniter.any.Any) -> <init>
    66:141:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.ExistsQuery -> com.viridiansoftware.es2pgsql.search.query.ExistsQuery:
    java.lang.String KEY_FIELD -> a
    java.lang.String fieldName -> b
    14:16:void <init>(com.jsoniter.any.Any) -> <init>
    20:20:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.IdsQuery -> com.viridiansoftware.es2pgsql.search.query.IdsQuery:
    java.lang.String KEY_TYPE -> a
    java.lang.String KEY_VALUES -> b
    java.lang.String KEY_BOOST -> c
    java.util.List types -> types
    java.util.List values -> values
    double boost -> boost
    17:45:void <init>(com.jsoniter.any.Any) -> <init>
    49:75:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.MatchAllQuery -> com.viridiansoftware.es2pgsql.search.query.MatchAllQuery:
    6:6:void <init>() -> <init>
    10:10:boolean isMatchAllQuery() -> isMatchAllQuery
    15:15:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.MatchMode -> com.viridiansoftware.es2pgsql.search.query.MatchMode:
    com.viridiansoftware.es2pgsql.search.query.MatchMode DEFAULT -> DEFAULT
    com.viridiansoftware.es2pgsql.search.query.MatchMode PHRASE -> PHRASE
    com.viridiansoftware.es2pgsql.search.query.MatchMode PHRASE_PREFIX -> PHRASE_PREFIX
    com.viridiansoftware.es2pgsql.search.query.MatchMode[] $VALUES -> a
    6:6:com.viridiansoftware.es2pgsql.search.query.MatchMode[] values() -> values
    6:6:com.viridiansoftware.es2pgsql.search.query.MatchMode valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:9:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.search.query.MatchPhrasePrefixQuery -> com.viridiansoftware.es2pgsql.search.query.MatchPhrasePrefixQuery:
    11:13:void <init>(com.jsoniter.any.Any) -> <init>
com.viridiansoftware.es2pgsql.search.query.MatchPhraseQuery -> com.viridiansoftware.es2pgsql.search.query.MatchPhraseQuery:
    11:13:void <init>(com.jsoniter.any.Any) -> <init>
com.viridiansoftware.es2pgsql.search.query.MatchQuery -> com.viridiansoftware.es2pgsql.search.query.MatchQuery:
    java.lang.String KEY_QUERY -> a
    java.lang.String KEY_OPERATOR -> b
    java.lang.String KEY_TYPE -> c
    java.lang.String KEY_ZERO_TERMS_QUERY -> d
    java.lang.String KEY_BOOST -> e
    java.lang.String fieldName -> fieldName
    java.lang.String query -> query
    java.lang.String operator -> operator
    java.lang.String zeroTermsQuery -> zeroTermsQuery
    double boost -> boost
    com.viridiansoftware.es2pgsql.search.query.MatchMode matchMode -> matchMode
    18:49:void <init>(com.jsoniter.any.Any) -> <init>
    53:60:java.lang.String toSqlWhereClause() -> toSqlWhereClause
    65:65:java.lang.String toPhrasePrefixSqlWhereClause() -> toPhrasePrefixSqlWhereClause
    69:69:java.lang.String toPhraseSqlWhereClause() -> toPhraseSqlWhereClause
    73:84:java.lang.String toDefaultSqlWhereClause() -> toDefaultSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.MatchQuery$1 -> com.viridiansoftware.es2pgsql.search.query.MatchQuery$1:
    int[] $SwitchMap$com$viridiansoftware$es2pgsql$search$query$MatchMode -> a
    53:53:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.search.query.PrefixQuery -> com.viridiansoftware.es2pgsql.search.query.PrefixQuery:
    java.lang.String KEY_VALUE -> a
    java.lang.String KEY_BOOST -> b
    java.lang.String fieldName -> fieldName
    java.lang.String value -> value
    double boost -> boost
    15:35:void <init>(com.jsoniter.any.Any) -> <init>
    39:39:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.Query -> com.viridiansoftware.es2pgsql.search.query.Query:
    6:6:void <init>() -> <init>
    9:9:boolean isMatchAllQuery() -> isMatchAllQuery
    java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.QueryParser -> com.viridiansoftware.es2pgsql.search.query.QueryParser:
    java.lang.String FIELD_QUERY -> FIELD_QUERY
    java.lang.String QUERY_BOOL -> QUERY_BOOL
    java.lang.String QUERY_EXISTS -> QUERY_EXISTS
    java.lang.String QUERY_IDS -> QUERY_IDS
    java.lang.String QUERY_MATCH_ALL -> QUERY_MATCH_ALL
    java.lang.String QUERY_MATCH_PHRASE_PREFIX -> QUERY_MATCH_PHRASE_PREFIX
    java.lang.String QUERY_MATCH_PHRASE -> QUERY_MATCH_PHRASE
    java.lang.String QUERY_MATCH -> QUERY_MATCH
    java.lang.String QUERY_MULTI_MATCH -> QUERY_MULTI_MATCH
    java.lang.String QUERY_PREFIX -> QUERY_PREFIX
    java.lang.String QUERY_RANGE -> QUERY_RANGE
    java.lang.String QUERY_REGEXP -> QUERY_REGEXP
    java.lang.String QUERY_TERM -> QUERY_TERM
    java.lang.String QUERY_TYPE -> QUERY_TYPE
    java.lang.String QUERY_WILDCARD -> QUERY_WILDCARD
    14:14:void <init>() -> <init>
    33:37:com.viridiansoftware.es2pgsql.search.query.Query parseQuery(java.lang.String) -> parseQuery
    41:70:com.viridiansoftware.es2pgsql.search.query.Query parseQuery(com.jsoniter.any.Any) -> parseQuery
com.viridiansoftware.es2pgsql.search.query.RangeQuery -> com.viridiansoftware.es2pgsql.search.query.RangeQuery:
    java.lang.String KEY_GTE -> a
    java.lang.String KEY_GT -> b
    java.lang.String KEY_LTE -> c
    java.lang.String KEY_LT -> d
    java.lang.String KEY_BOOST -> e
    java.lang.String fieldName -> fieldName
    java.lang.Long longFrom -> longFrom
    java.lang.Long longTo -> longTo
    java.lang.Double doubleFrom -> doubleFrom
    java.lang.Double doubleTo -> doubleTo
    boolean includeLower -> includeLower
    boolean includeUpper -> includeUpper
    double boost -> boost
    19:51:void <init>(com.jsoniter.any.Any) -> <init>
    55:67:java.lang.String toSqlWhereClause() -> toSqlWhereClause
    71:76:void setFrom(com.jsoniter.any.Any) -> setFrom
    79:84:void setTo(com.jsoniter.any.Any) -> setTo
com.viridiansoftware.es2pgsql.search.query.RegexpQuery -> com.viridiansoftware.es2pgsql.search.query.RegexpQuery:
    java.lang.String KEY_VALUE -> a
    java.lang.String KEY_BOOST -> b
    java.lang.String fieldName -> fieldName
    java.lang.String value -> value
    double boost -> boost
    15:35:void <init>(com.jsoniter.any.Any) -> <init>
    39:39:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.TermQuery -> com.viridiansoftware.es2pgsql.search.query.TermQuery:
    java.lang.String KEY_VALUE -> a
    java.lang.String KEY_BOOST -> b
    java.lang.String fieldName -> fieldName
    java.lang.String value -> value
    double boost -> boost
    15:32:void <init>(com.jsoniter.any.Any) -> <init>
    36:36:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.TypeQuery -> com.viridiansoftware.es2pgsql.search.query.TypeQuery:
    java.lang.String KEY_VALUE -> a
    java.lang.String KEY_BOOST -> b
    java.lang.String value -> value
    double boost -> boost
    14:24:void <init>(com.jsoniter.any.Any) -> <init>
    28:28:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.search.query.WildcardQuery -> com.viridiansoftware.es2pgsql.search.query.WildcardQuery:
    java.lang.String KEY_VALUE -> a
    java.lang.String KEY_BOOST -> b
    java.lang.String fieldName -> fieldName
    java.lang.String value -> value
    double boost -> boost
    15:35:void <init>(com.jsoniter.any.Any) -> <init>
    39:39:java.lang.String toSqlWhereClause() -> toSqlWhereClause
com.viridiansoftware.es2pgsql.util.EmptyJsonObject -> com.viridiansoftware.es2pgsql.util.EmptyJsonObject:
    com.viridiansoftware.es2pgsql.util.EmptyJsonObject INSTANCE -> INSTANCE
    6:6:void <init>() -> <init>
    7:7:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.util.FormatDateTimeFormatter -> com.viridiansoftware.es2pgsql.util.FormatDateTimeFormatter:
    java.lang.String format -> a
    org.joda.time.format.DateTimeFormatter parser -> b
    org.joda.time.format.DateTimeFormatter printer -> c
    java.util.Locale locale -> d
    22:23:void <init>(java.lang.String,org.joda.time.format.DateTimeFormatter,java.util.Locale) -> <init>
    25:30:void <init>(java.lang.String,org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter,java.util.Locale) -> <init>
    33:33:java.lang.String format() -> format
    37:37:org.joda.time.format.DateTimeFormatter parser() -> parser
    41:41:org.joda.time.format.DateTimeFormatter printer() -> printer
    45:45:java.util.Locale locale() -> locale
com.viridiansoftware.es2pgsql.util.JodaUtils -> com.viridiansoftware.es2pgsql.util.JodaUtils:
    27:27:void <init>() -> <init>
    30:30:boolean hasLength(java.lang.CharSequence) -> hasLength
    34:34:java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String) -> delimitedListToStringArray
    38:48:java.lang.String deleteAny(java.lang.String,java.lang.String) -> deleteAny
    52:75:java.lang.String[] delimitedListToStringArray(java.lang.String,java.lang.String,java.lang.String) -> delimitedListToStringArray
    79:82:java.lang.String[] toStringArray(java.util.Collection) -> toStringArray
    86:287:com.viridiansoftware.es2pgsql.util.FormatDateTimeFormatter forPattern(java.lang.String,java.util.Locale) -> forPattern
com.viridiansoftware.es2pgsql.util.JodaUtils$EpochTimeParser -> com.viridiansoftware.es2pgsql.util.JodaUtils$EpochTimeParser:
    boolean hasMilliSecondPrecision -> a
    294:296:void <init>(boolean) -> <init>
    300:300:int estimateParsedLength() -> estimateParsedLength
    305:331:int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int) -> parseInto
com.viridiansoftware.es2pgsql.util.JodaUtils$EpochTimePrinter -> com.viridiansoftware.es2pgsql.util.JodaUtils$EpochTimePrinter:
    boolean hasMilliSecondPrecision -> a
    339:341:void <init>(boolean) -> <init>
    345:345:int estimatePrintedLength() -> estimatePrintedLength
    355:360:void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale) -> printTo
    368:373:void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale) -> printTo
    377:382:void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale) -> printTo
    386:391:void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale) -> printTo
    394:401:long getDateTimeMillis(org.joda.time.ReadablePartial) -> a
com.viridiansoftware.es2pgsql.util.StrictISODateTimeFormat -> com.viridiansoftware.es2pgsql.util.StrictISODateTimeFormat:
    23:24:void <init>() -> <init>
    108:150:org.joda.time.format.DateTimeFormatter forFields(java.util.Collection,boolean,boolean) -> forFields
    171:219:boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean) -> a
    237:254:boolean dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean) -> a
    274:322:boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean) -> b
    346:400:void time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean) -> a
    411:414:void checkNotStrictISO(java.util.Collection,boolean) -> a
    424:427:void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean) -> a
    446:446:org.joda.time.format.DateTimeFormatter dateParser() -> dateParser
    466:466:org.joda.time.format.DateTimeFormatter localDateParser() -> localDateParser
    483:483:org.joda.time.format.DateTimeFormatter dateElementParser() -> dateElementParser
    504:504:org.joda.time.format.DateTimeFormatter timeParser() -> timeParser
    526:526:org.joda.time.format.DateTimeFormatter localTimeParser() -> localTimeParser
    545:545:org.joda.time.format.DateTimeFormatter timeElementParser() -> timeElementParser
    572:572:org.joda.time.format.DateTimeFormatter dateTimeParser() -> dateTimeParser
    598:598:org.joda.time.format.DateTimeFormatter dateOptionalTimeParser() -> dateOptionalTimeParser
    625:625:org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser() -> localDateOptionalTimeParser
    639:639:org.joda.time.format.DateTimeFormatter date() -> date
    656:656:org.joda.time.format.DateTimeFormatter time() -> time
    672:672:org.joda.time.format.DateTimeFormatter timeNoMillis() -> timeNoMillis
    689:689:org.joda.time.format.DateTimeFormatter tTime() -> tTime
    706:706:org.joda.time.format.DateTimeFormatter tTimeNoMillis() -> tTimeNoMillis
    722:722:org.joda.time.format.DateTimeFormatter dateTime() -> dateTime
    738:738:org.joda.time.format.DateTimeFormatter dateTimeNoMillis() -> dateTimeNoMillis
    752:752:org.joda.time.format.DateTimeFormatter ordinalDate() -> ordinalDate
    769:769:org.joda.time.format.DateTimeFormatter ordinalDateTime() -> ordinalDateTime
    786:786:org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis() -> ordinalDateTimeNoMillis
    799:799:org.joda.time.format.DateTimeFormatter weekDate() -> weekDate
    815:815:org.joda.time.format.DateTimeFormatter weekDateTime() -> weekDateTime
    831:831:org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis() -> weekDateTimeNoMillis
    844:844:org.joda.time.format.DateTimeFormatter basicDate() -> basicDate
    860:860:org.joda.time.format.DateTimeFormatter basicTime() -> basicTime
    875:875:org.joda.time.format.DateTimeFormatter basicTimeNoMillis() -> basicTimeNoMillis
    891:891:org.joda.time.format.DateTimeFormatter basicTTime() -> basicTTime
    907:907:org.joda.time.format.DateTimeFormatter basicTTimeNoMillis() -> basicTTimeNoMillis
    922:922:org.joda.time.format.DateTimeFormatter basicDateTime() -> basicDateTime
    937:937:org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis() -> basicDateTimeNoMillis
    950:950:org.joda.time.format.DateTimeFormatter basicOrdinalDate() -> basicOrdinalDate
    966:966:org.joda.time.format.DateTimeFormatter basicOrdinalDateTime() -> basicOrdinalDateTime
    982:982:org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis() -> basicOrdinalDateTimeNoMillis
    994:994:org.joda.time.format.DateTimeFormatter basicWeekDate() -> basicWeekDate
    1009:1009:org.joda.time.format.DateTimeFormatter basicWeekDateTime() -> basicWeekDateTime
    1024:1024:org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis() -> basicWeekDateTimeNoMillis
    1034:1034:org.joda.time.format.DateTimeFormatter year() -> year
    1044:1044:org.joda.time.format.DateTimeFormatter yearMonth() -> yearMonth
    1054:1054:org.joda.time.format.DateTimeFormatter yearMonthDay() -> yearMonthDay
    1063:1063:org.joda.time.format.DateTimeFormatter weekyear() -> weekyear
    1073:1073:org.joda.time.format.DateTimeFormatter weekyearWeek() -> weekyearWeek
    1083:1083:org.joda.time.format.DateTimeFormatter weekyearWeekDay() -> weekyearWeekDay
    1092:1092:org.joda.time.format.DateTimeFormatter hour() -> hour
    1102:1102:org.joda.time.format.DateTimeFormatter hourMinute() -> hourMinute
    1112:1112:org.joda.time.format.DateTimeFormatter hourMinuteSecond() -> hourMinuteSecond
    1124:1124:org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis() -> hourMinuteSecondMillis
    1136:1136:org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction() -> hourMinuteSecondFraction
    1146:1146:org.joda.time.format.DateTimeFormatter dateHour() -> dateHour
    1156:1156:org.joda.time.format.DateTimeFormatter dateHourMinute() -> dateHourMinute
    1167:1167:org.joda.time.format.DateTimeFormatter dateHourMinuteSecond() -> dateHourMinuteSecond
    1179:1179:org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis() -> dateHourMinuteSecondMillis
    1191:1191:org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction() -> dateHourMinuteSecondFraction
com.viridiansoftware.es2pgsql.util.StrictISODateTimeFormat$Constants -> com.viridiansoftware.es2pgsql.util.StrictISODateTimeFormat$a:
    org.joda.time.format.DateTimeFormatter ye -> a
    org.joda.time.format.DateTimeFormatter mye -> b
    org.joda.time.format.DateTimeFormatter dme -> c
    org.joda.time.format.DateTimeFormatter we -> d
    org.joda.time.format.DateTimeFormatter wwe -> e
    org.joda.time.format.DateTimeFormatter dwe -> f
    org.joda.time.format.DateTimeFormatter dye -> g
    org.joda.time.format.DateTimeFormatter hde -> h
    org.joda.time.format.DateTimeFormatter mhe -> i
    org.joda.time.format.DateTimeFormatter sme -> j
    org.joda.time.format.DateTimeFormatter fse -> k
    org.joda.time.format.DateTimeFormatter ze -> l
    org.joda.time.format.DateTimeFormatter lte -> m
    org.joda.time.format.DateTimeFormatter ym -> n
    org.joda.time.format.DateTimeFormatter ymd -> o
    org.joda.time.format.DateTimeFormatter ww -> p
    org.joda.time.format.DateTimeFormatter wwd -> q
    org.joda.time.format.DateTimeFormatter hm -> r
    org.joda.time.format.DateTimeFormatter hms -> s
    org.joda.time.format.DateTimeFormatter hmsl -> t
    org.joda.time.format.DateTimeFormatter hmsf -> u
    org.joda.time.format.DateTimeFormatter dh -> v
    org.joda.time.format.DateTimeFormatter dhm -> w
    org.joda.time.format.DateTimeFormatter dhms -> x
    org.joda.time.format.DateTimeFormatter dhmsl -> y
    org.joda.time.format.DateTimeFormatter dhmsf -> z
    org.joda.time.format.DateTimeFormatter t -> A
    org.joda.time.format.DateTimeFormatter tx -> B
    org.joda.time.format.DateTimeFormatter tt -> C
    org.joda.time.format.DateTimeFormatter ttx -> D
    org.joda.time.format.DateTimeFormatter dt -> E
    org.joda.time.format.DateTimeFormatter dtx -> F
    org.joda.time.format.DateTimeFormatter wdt -> G
    org.joda.time.format.DateTimeFormatter wdtx -> H
    org.joda.time.format.DateTimeFormatter od -> I
    org.joda.time.format.DateTimeFormatter odt -> J
    org.joda.time.format.DateTimeFormatter odtx -> K
    org.joda.time.format.DateTimeFormatter bd -> L
    org.joda.time.format.DateTimeFormatter bt -> M
    org.joda.time.format.DateTimeFormatter btx -> N
    org.joda.time.format.DateTimeFormatter btt -> O
    org.joda.time.format.DateTimeFormatter bttx -> P
    org.joda.time.format.DateTimeFormatter bdt -> Q
    org.joda.time.format.DateTimeFormatter bdtx -> R
    org.joda.time.format.DateTimeFormatter bod -> S
    org.joda.time.format.DateTimeFormatter bodt -> T
    org.joda.time.format.DateTimeFormatter bodtx -> U
    org.joda.time.format.DateTimeFormatter bwd -> V
    org.joda.time.format.DateTimeFormatter bwdt -> W
    org.joda.time.format.DateTimeFormatter bwdtx -> X
    org.joda.time.format.DateTimeFormatter dpe -> Y
    org.joda.time.format.DateTimeFormatter tpe -> Z
    org.joda.time.format.DateTimeFormatter dp -> aa
    org.joda.time.format.DateTimeFormatter ldp -> ab
    org.joda.time.format.DateTimeFormatter tp -> ac
    org.joda.time.format.DateTimeFormatter ltp -> ad
    org.joda.time.format.DateTimeFormatter dtp -> ae
    org.joda.time.format.DateTimeFormatter dotp -> af
    org.joda.time.format.DateTimeFormatter ldotp -> ag
    1195:1195:void <init>() -> <init>
    1275:1284:org.joda.time.format.DateTimeFormatter dateParser() -> X
    1288:1291:org.joda.time.format.DateTimeFormatter localDateParser() -> Y
    1295:1318:org.joda.time.format.DateTimeFormatter dateElementParser() -> Z
    1322:1329:org.joda.time.format.DateTimeFormatter timeParser() -> aa
    1333:1339:org.joda.time.format.DateTimeFormatter localTimeParser() -> ab
    1343:1392:org.joda.time.format.DateTimeFormatter timeElementParser() -> ac
    1396:1408:org.joda.time.format.DateTimeFormatter dateTimeParser() -> ad
    1412:1423:org.joda.time.format.DateTimeFormatter dateOptionalTimeParser() -> ae
    1427:1437:org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser() -> af
    1442:1448:org.joda.time.format.DateTimeFormatter time() -> ag
    1452:1458:org.joda.time.format.DateTimeFormatter timeNoMillis() -> ah
    1462:1468:org.joda.time.format.DateTimeFormatter tTime() -> ai
    1472:1478:org.joda.time.format.DateTimeFormatter tTimeNoMillis() -> aj
    1482:1488:org.joda.time.format.DateTimeFormatter dateTime() -> ak
    1492:1498:org.joda.time.format.DateTimeFormatter dateTimeNoMillis() -> al
    1502:1508:org.joda.time.format.DateTimeFormatter ordinalDate() -> am
    1512:1518:org.joda.time.format.DateTimeFormatter ordinalDateTime() -> an
    1522:1528:org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis() -> ao
    1532:1538:org.joda.time.format.DateTimeFormatter weekDateTime() -> ap
    1542:1548:org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis() -> aq
    1553:1560:org.joda.time.format.DateTimeFormatter basicDate() -> ar
    1564:1574:org.joda.time.format.DateTimeFormatter basicTime() -> as
    1578:1586:org.joda.time.format.DateTimeFormatter basicTimeNoMillis() -> at
    1590:1596:org.joda.time.format.DateTimeFormatter basicTTime() -> au
    1600:1606:org.joda.time.format.DateTimeFormatter basicTTimeNoMillis() -> av
    1610:1616:org.joda.time.format.DateTimeFormatter basicDateTime() -> aw
    1620:1626:org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis() -> ax
    1630:1636:org.joda.time.format.DateTimeFormatter basicOrdinalDate() -> ay
    1640:1646:org.joda.time.format.DateTimeFormatter basicOrdinalDateTime() -> az
    1650:1656:org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis() -> aA
    1660:1668:org.joda.time.format.DateTimeFormatter basicWeekDate() -> aB
    1672:1678:org.joda.time.format.DateTimeFormatter basicWeekDateTime() -> aC
    1682:1688:org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis() -> aD
    1693:1699:org.joda.time.format.DateTimeFormatter yearMonth() -> aE
    1703:1710:org.joda.time.format.DateTimeFormatter yearMonthDay() -> aF
    1714:1720:org.joda.time.format.DateTimeFormatter weekyearWeek() -> aG
    1724:1731:org.joda.time.format.DateTimeFormatter weekyearWeekDay() -> aH
    1735:1741:org.joda.time.format.DateTimeFormatter hourMinute() -> aI
    1745:1752:org.joda.time.format.DateTimeFormatter hourMinuteSecond() -> aJ
    1756:1765:org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis() -> aK
    1769:1777:org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction() -> aL
    1781:1788:org.joda.time.format.DateTimeFormatter dateHour() -> aM
    1792:1799:org.joda.time.format.DateTimeFormatter dateHourMinute() -> aN
    1803:1810:org.joda.time.format.DateTimeFormatter dateHourMinuteSecond() -> aO
    1814:1821:org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis() -> aP
    1825:1832:org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction() -> aQ
    1837:1842:org.joda.time.format.DateTimeFormatter yearElement() -> aR
    1846:1852:org.joda.time.format.DateTimeFormatter monthElement() -> aS
    1856:1862:org.joda.time.format.DateTimeFormatter dayOfMonthElement() -> aT
    1866:1871:org.joda.time.format.DateTimeFormatter weekyearElement() -> aU
    1875:1881:org.joda.time.format.DateTimeFormatter weekElement() -> aV
    1885:1891:org.joda.time.format.DateTimeFormatter dayOfWeekElement() -> aW
    1895:1901:org.joda.time.format.DateTimeFormatter dayOfYearElement() -> aX
    1905:1910:org.joda.time.format.DateTimeFormatter literalTElement() -> aY
    1914:1919:org.joda.time.format.DateTimeFormatter hourElement() -> aZ
    1923:1929:org.joda.time.format.DateTimeFormatter minuteElement() -> ba
    1933:1939:org.joda.time.format.DateTimeFormatter secondElement() -> bb
    1943:1951:org.joda.time.format.DateTimeFormatter fractionElement() -> bc
    1955:1960:org.joda.time.format.DateTimeFormatter offsetElement() -> bd
    1195:1195:org.joda.time.format.DateTimeFormatter access$000() -> a
    1195:1195:org.joda.time.format.DateTimeFormatter access$100() -> b
    1195:1195:org.joda.time.format.DateTimeFormatter access$200() -> c
    1195:1195:org.joda.time.format.DateTimeFormatter access$300() -> d
    1195:1195:org.joda.time.format.DateTimeFormatter access$400() -> e
    1195:1195:org.joda.time.format.DateTimeFormatter access$500() -> f
    1195:1195:org.joda.time.format.DateTimeFormatter access$600() -> g
    1195:1195:org.joda.time.format.DateTimeFormatter access$700() -> h
    1195:1195:org.joda.time.format.DateTimeFormatter access$800() -> i
    1195:1195:org.joda.time.format.DateTimeFormatter access$900() -> j
    1195:1195:org.joda.time.format.DateTimeFormatter access$1000() -> k
    1195:1195:org.joda.time.format.DateTimeFormatter access$1100() -> l
    1195:1195:org.joda.time.format.DateTimeFormatter access$1200() -> m
    1195:1195:org.joda.time.format.DateTimeFormatter access$1300() -> n
    1195:1195:org.joda.time.format.DateTimeFormatter access$1400() -> o
    1195:1195:org.joda.time.format.DateTimeFormatter access$1500() -> p
    1195:1195:org.joda.time.format.DateTimeFormatter access$1600() -> q
    1195:1195:org.joda.time.format.DateTimeFormatter access$1700() -> r
    1195:1195:org.joda.time.format.DateTimeFormatter access$1800() -> s
    1195:1195:org.joda.time.format.DateTimeFormatter access$1900() -> t
    1195:1195:org.joda.time.format.DateTimeFormatter access$2000() -> u
    1195:1195:org.joda.time.format.DateTimeFormatter access$2100() -> v
    1195:1195:org.joda.time.format.DateTimeFormatter access$2200() -> w
    1195:1195:org.joda.time.format.DateTimeFormatter access$2300() -> x
    1195:1195:org.joda.time.format.DateTimeFormatter access$2400() -> y
    1195:1195:org.joda.time.format.DateTimeFormatter access$2500() -> z
    1195:1195:org.joda.time.format.DateTimeFormatter access$2600() -> A
    1195:1195:org.joda.time.format.DateTimeFormatter access$2700() -> B
    1195:1195:org.joda.time.format.DateTimeFormatter access$2800() -> C
    1195:1195:org.joda.time.format.DateTimeFormatter access$2900() -> D
    1195:1195:org.joda.time.format.DateTimeFormatter access$3000() -> E
    1195:1195:org.joda.time.format.DateTimeFormatter access$3100() -> F
    1195:1195:org.joda.time.format.DateTimeFormatter access$3200() -> G
    1195:1195:org.joda.time.format.DateTimeFormatter access$3300() -> H
    1195:1195:org.joda.time.format.DateTimeFormatter access$3400() -> I
    1195:1195:org.joda.time.format.DateTimeFormatter access$3500() -> J
    1195:1195:org.joda.time.format.DateTimeFormatter access$3600() -> K
    1195:1195:org.joda.time.format.DateTimeFormatter access$3700() -> L
    1195:1195:org.joda.time.format.DateTimeFormatter access$3800() -> M
    1195:1195:org.joda.time.format.DateTimeFormatter access$3900() -> N
    1195:1195:org.joda.time.format.DateTimeFormatter access$4000() -> O
    1195:1195:org.joda.time.format.DateTimeFormatter access$4100() -> P
    1195:1195:org.joda.time.format.DateTimeFormatter access$4200() -> Q
    1195:1195:org.joda.time.format.DateTimeFormatter access$4300() -> R
    1195:1195:org.joda.time.format.DateTimeFormatter access$4400() -> S
    1195:1195:org.joda.time.format.DateTimeFormatter access$4500() -> T
    1195:1195:org.joda.time.format.DateTimeFormatter access$4600() -> U
    1195:1195:org.joda.time.format.DateTimeFormatter access$4700() -> V
    1195:1195:org.joda.time.format.DateTimeFormatter access$4800() -> W
    1197:1271:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.util.TableGarbageCollector -> com.viridiansoftware.es2pgsql.util.TableGarbageCollector:
    org.slf4j.Logger LOGGER -> a
    java.util.Queue tableDeletionQueue -> b
    java.util.concurrent.atomic.AtomicBoolean shutdownInitiated -> c
    com.viridiansoftware.es2pgsql.node.NodeSettingsService nodeSettingsService -> nodeSettingsService
    org.springframework.scheduling.TaskScheduler taskScheduler -> taskScheduler
    com.viridiansoftware.es2pgsql.util.TableUtils tableUtils -> tableUtils
    24:28:void <init>() -> <init>
    39:40:void postConstruct() -> postConstruct
    44:45:void preDestroy() -> preDestroy
    48:51:void scheduleTablesForDeletion(java.util.Collection) -> scheduleTablesForDeletion
    54:55:void scheduleTableForDeletion(java.lang.String) -> scheduleTableForDeletion
    60:70:void run() -> run
    73:79:void deleteNextTable() -> a
    25:25:void <clinit>() -> <clinit>
com.viridiansoftware.es2pgsql.util.TableUtils -> com.viridiansoftware.es2pgsql.util.TableUtils:
    org.slf4j.Logger LOGGER -> a
    java.util.Set knownTables -> b
    com.viridiansoftware.es2pgsql.node.NodeSettingsService nodeSettingsService -> nodeSettingsService
    org.springframework.jdbc.core.JdbcTemplate jdbcTemplate -> jdbcTemplate
    39:42:void <init>() -> <init>
    50:53:java.lang.String sanitizeTableName(java.lang.String) -> sanitizeTableName
    57:70:java.util.List listTables() -> listTables
    74:78:java.util.List listTables(java.util.List) -> listTables
    82:94:java.util.List listTables(java.lang.String) -> listTables
    98:100:void deleteTable(java.lang.String) -> deleteTable
    103:140:void ensureTableExists(java.lang.String) -> ensureTableExists
    143:147:java.lang.String destringifyJson(java.lang.String) -> destringifyJson
    40:40:void <clinit>() -> <clinit>
