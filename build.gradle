buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'

	version = '1.0.0-SNAPSHOT'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	ext {
		elasticsearch5Version = '5.5.2'
		elasticsearch2Version = '2.4.4'
		hikariVersion = '2.7.1'
		jodaVersion = '2.9.9'
		jsoniterVersion = '0.9.16'
		nativesLoaderVersion = '1.0.0'
		codecVersion = '1.10'
	}

	repositories {
		mavenLocal()
		mavenCentral()
	}
}


project(":" + rootProject.name + "-core") {
	bootRepackage.enabled = false
	
	dependencies {
		compile('org.springframework.boot:spring-boot-starter-cache')
		compile('org.springframework.boot:spring-boot-starter-jdbc') {
			exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc' 
		}
		compile('org.springframework.boot:spring-boot-starter-web')
		compile "org.mini2Dx:natives-loader:$nativesLoaderVersion"
		compile "com.jsoniter:jsoniter:$jsoniterVersion"
		compile "com.zaxxer:HikariCP:$hikariVersion"
		compile "joda-time:joda-time:$jodaVersion"
		compile "commons-codec:commons-codec:$codecVersion"
		compile('org.postgresql:postgresql')
		
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile "org.elasticsearch.client:rest:$elasticsearch5Version"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.1'
}
