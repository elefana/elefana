elefana.node.name=example
elefana.cluster.name=example-cluster

# HTTP bind address
elefana.http.address=127.0.0.1
elefana.http.port=9200

# Enable GZIP compression
elefana.http.gzip=true
# Maximum HTTP requests/responses per HTTP pipeline queue, 0 disables pipelining
elefana.http.maxEvents=1000
# Maximum HTTP payload size (in bytes)
elefana.http.maxPayloadSize=104857600

# Elasticsearch API compatibility version
# 2 = Elasticsearch 2.x compatibility
# 5 = Elasticsearch 5.x compatibility
elefana.esCompatVersion=2

# True if citus extension is used in postgres
elefana.citus.enabled=false

# Citus coordinator node information
# Note: The host/port must be the same host/port that workers use to communicate with the coordinator node
elefana.citus.coordinator.host=127.0.0.1
elefana.citus.coordinator.port=5432
# Set to true to override auto-detection of local elefana node's direct connection to coordinator
#elefana.citus.coordinator.direct=false

# Bulk requests will be split across multiple PSQL connections
elefana.bulkParallelisation=4
# Frequency of when field stats should be refreshed (in milliseconds)
elefana.fieldStatsInterval=60000
# Frequency of when mappings should be refreshed (in milliseconds)
elefana.mappingInterval=1000
# Percentage of total rows to sample for mapping - increase/decrease based on total documents per index
elefana.mappingSampleSize=0.00001
# If bernoulli sampling returns 0 rows, fallback to the first N entries as a sample
elefana.fallbackMappingSampleSize=100
# Interval to clean up temporary tables (in milliseconds)
elefana.gcInterval=1000

# Metrics output target; noop, console or graphite
elefana.metrics.reporter=noop
# Metrics reporting frequency (seconds)
elefana.metrics.frequency=1000
#elefana.metrics.graphite.prefix=your.host.name
#elefana.metrics.graphite.host=127.0.0.1
#elefana.metrics.graphite.port=9200

#logging.file=/var/log/elefana/elefana.log

spring.datasource.url=jdbc:postgresql://localhost:5432/elefana
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT NOW();
spring.datasource.tomcat.validation-interval=30000

# Bulk ingests data into one or more tablespaces. Note: tablespaces must already exist
#elefana.service.bulk.tablespaces=
# Determines no. of concurrently processed requests to node info API
# Defaults to no. of cores when set to less than 1 or value is commented out
#elefana.service.bulk.threads=4
# Determines no. of concurrently processed requests to cluster info API
# Defaults to 2 when commented out
#elefana.service.cluster.threads=2
# Determines no. of concurrently processed requests to document API
# Defaults to no. of cores when commented out
#elefana.service.document.threads=4
# Determines no. of concurrently processed requests to field mapping/stats APIs
# Defaults to 2 when commented out
#elefana.service.field.threads=4
# Determines no. of concurrently processed requests to node info API
# Defaults to 2 when commented out
#elefana.service.node.threads=2
# Determines no. of concurrently processed requests to search API
# Defaults to no. of cores when commented out
#elefana.service.search.threads=4
# Determines no. of concurrently processed requests to template API
# Defaults to no. of cores when commented out
#elefana.service.template.threads=4