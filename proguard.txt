-dontshrink
-dontoptimize

# Include java runtime classes
-libraryjars  <java.home>/lib/rt.jar

# Output a source map file
-printmapping proguard.map

# Keep filenames and line numbers
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,Synthetic,EnclosingMethod,Bean,RequestMapping,Controller

-adaptresourcefilenames **.properties
-adaptresourcefilecontents **.properties,META-INF/MANIFEST.MF

-verbose
-ignorewarnings

# Disable certain proguard optimizations which remove stackframes (same as Android defaults)
-optimizations !method/inlining/*

-keepnames public class com.viridiansoftware.*Controller

-keepnames @org.springframework.stereotype.Component class *
-keepnames @org.springframework.stereotype.Service class *

-keep @org.springframework.boot.autoconfigure.SpringBootApplication class *
-keep @org.springframework.stereotype.Service class *
-keep @org.springframework.stereotype.Controller class *
-keep @org.springframework.stereotype.Component class *
-keep @org.springframework.stereotype.Repository class *
-keep @org.springframework.cache.annotation.EnableCaching class *
-keep @org.springframework.context.annotation.Configuration class *
-keep @org.springframework.web.bind.annotation.RestController class *

-keep public class * {
    public protected *;
}

-keepclassmembers public class * {
	public  <fields>;
	public  <init>(...);

	@org.springframework.stereotype.Service *** *(...) ;
	@org.springframework.beans.factory.annotation.Autowired <fields>;

	void set*(***);
	boolean is*();
	*** get*();
}

-keepclasseswithmembers public class * {
	public static void main(java.lang.String[]);
}

-keepclassmembers class * {	
	@org.springframework.beans.factory.annotation.Autowired *; 
    @org.springframework.beans.factory.annotation.Qualifier *; 
    @org.springframework.beans.factory.annotation.Value *; 
    @org.springframework.beans.factory.annotation.Required *;
    @org.springframework.web.bind.annotation.RequestMapping *;
    @org.springframework.web.bind.annotation.RequestMethod *;
    @org.springframework.context.annotation.Bean *;
    @javax.annotation.PostConstruct *;
    @javax.annotation.PreDestroy *;
    @org.aspectj.lang.annotation.AfterReturning *;
    @org.aspectj.lang.annotation.Pointcut *;
    @org.aspectj.lang.annotation.AfterThrowing *;
    @org.aspectj.lang.annotation.Around *;
    @org.springframework.transaction.annotation.Transactional *;
}

-keepclassmembernames class * {
    java.lang.Class class$(java.lang.String);
    java.lang.Class class$(java.lang.String, boolean);
}

-keepclasseswithmembernames class * {
    native <methods>;
}

-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

-assumenosideeffects public class java.lang.System {
	public static long currentTimeMillis();
	static java.lang.Class getCallerClass();
	public static int identityHashCode(java.lang.Object);
	public static java.lang.SecurityManager getSecurityManager();
	public static java.util.Properties getProperties();
	public static java.lang.String getProperty(java.lang.String);
	public static java.lang.String getenv(java.lang.String);
	public static java.lang.String mapLibraryName(java.lang.String);
	public static java.lang.String getProperty(java.lang.String,java.lang.String);
}